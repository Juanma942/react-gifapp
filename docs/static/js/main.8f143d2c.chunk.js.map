{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAyBhD,OAEO,sBAAMC,SAfQ,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MASf,SACK,uBACIO,KAAK,OACLC,MAAQT,EACRU,SA1BU,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAEnCR,EAAeQ,S,+BCPVG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAYH,GAFhD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,qBAAKc,UAAU,yCAAf,SACI,qBAAKC,IAAMf,EAAMgB,IAAMN,OCHtBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAEHxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAACpB,IAKGqB,EDlB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACA,mCAAOpB,EAAP,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEfpBgB,EAAgB,WAAO,IAAD,EAGKzC,mBAAU,CAAC,WAHhB,mBAGxB0C,EAHwB,KAGZ3C,EAHY,KAO/B,OAEE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,MCd9B6B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.8f143d2c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ({ target: { value } }) => {\r\n        \r\n        setInputValue( value );\r\n    }\r\n        \r\n\r\n    //Se utiliza para prevenir el refresco del navegador al dar enter\r\n    const handleSumbit = (e) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        if( inputValue.trim().length > 1 ) {\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    };\r\n\r\n    \r\n    return (\r\n        \r\n           <form onSubmit={ handleSumbit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n           </form>\r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n    \r\n    \r\n    \r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI ( category ) }&limit=10&api_key=RW21a6YfcgKS4MIEjEJMZxCHE9fnfvNR`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    } )\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={ url } alt={ title } />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3> { category } </h3>\r\n       \r\n       { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n           \r\n            {\r\n                images.map( img  => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                    />\r\n                ) )\r\n            }\r\n        \r\n        </div>\r\n        </>\r\n    )   \r\n}\r\n        \r\n\r\n\r\n\r\n\r\n            \r\n    \r\n\r\n\r\n    \r\n    \r\n    \r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n            \r\n            getGifs( category )\r\n                .then( imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState( ['Dexter'] );\r\n\r\n    \r\n    \r\n    return (\r\n  \r\n      <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories } />\r\n        <hr/>\r\n\r\n        <ol>\r\n            { \r\n                categories.map( category => ( \r\n                    <GifGrid \r\n                        key={ category }\r\n                        category= { category } />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n      </>\r\n    \r\n    );\r\n  \r\n  };\r\n    \r\n       \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiftExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n  <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}